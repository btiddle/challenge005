package com.btiddle;

import java.io.PrintWriter;
import java.io.StringWriter;
import org.testng.annotations.*;
import static org.testng.Assert.*;
import static com.btiddle.PrintTable.printTable;
import static com.btiddle.PrintTable.getPrimes;

public class printTableTests {

    //
    // Positive Tests
    //

    @Test
    public void positive_size_1() {
        String expected_output =
            "     2\n" +
            "  2  4\n";
        StringWriter output = new StringWriter();
        long[] primeValues = getPrimes(1L);
        printTable(primeValues, new PrintWriter(output));
        assertTrue(output.toString().contains(expected_output));
    }

    @Test
    public void positive_size_10() {
        String expected_output =
            "         2    3    5    7   11   13   17   19   23   29\n" +
            "    2    4    6   10   14   22   26   34   38   46   58\n" +
            "    3    6    9   15   21   33   39   51   57   69   87\n" +
            "    5   10   15   25   35   55   65   85   95  115  145\n" +
            "    7   14   21   35   49   77   91  119  133  161  203\n" +
            "   11   22   33   55   77  121  143  187  209  253  319\n" +
            "   13   26   39   65   91  143  169  221  247  299  377\n" +
            "   17   34   51   85  119  187  221  289  323  391  493\n" +
            "   19   38   57   95  133  209  247  323  361  437  551\n" +
            "   23   46   69  115  161  253  299  391  437  529  667\n" +
            "   29   58   87  145  203  319  377  493  551  667  841\n";
        StringWriter output = new StringWriter();
        long[] primeValues = getPrimes(10L);
        printTable(primeValues, new PrintWriter(output));
        assertTrue(output.toString().contains(expected_output));
    }

    @Test
    public void positive_size_50() {
        String expected_output =
            "             2      3      5      7     11     13     17     19     23     29     31     37     41     43     47     53     59     61     67     71     73     79     83     89     97    101    103    107    109    113    127    131    137    139    149    151    157    163    167    173    179    181    191    193    197    199    211    223    227    229\n" +
            "      2      4      6     10     14     22     26     34     38     46     58     62     74     82     86     94    106    118    122    134    142    146    158    166    178    194    202    206    214    218    226    254    262    274    278    298    302    314    326    334    346    358    362    382    386    394    398    422    446    454    458\n" +
            "      3      6      9     15     21     33     39     51     57     69     87     93    111    123    129    141    159    177    183    201    213    219    237    249    267    291    303    309    321    327    339    381    393    411    417    447    453    471    489    501    519    537    543    573    579    591    597    633    669    681    687\n" +
            "      5     10     15     25     35     55     65     85     95    115    145    155    185    205    215    235    265    295    305    335    355    365    395    415    445    485    505    515    535    545    565    635    655    685    695    745    755    785    815    835    865    895    905    955    965    985    995   1055   1115   1135   1145\n" +
            "      7     14     21     35     49     77     91    119    133    161    203    217    259    287    301    329    371    413    427    469    497    511    553    581    623    679    707    721    749    763    791    889    917    959    973   1043   1057   1099   1141   1169   1211   1253   1267   1337   1351   1379   1393   1477   1561   1589   1603\n" +
            "     11     22     33     55     77    121    143    187    209    253    319    341    407    451    473    517    583    649    671    737    781    803    869    913    979   1067   1111   1133   1177   1199   1243   1397   1441   1507   1529   1639   1661   1727   1793   1837   1903   1969   1991   2101   2123   2167   2189   2321   2453   2497   2519\n" +
            "     13     26     39     65     91    143    169    221    247    299    377    403    481    533    559    611    689    767    793    871    923    949   1027   1079   1157   1261   1313   1339   1391   1417   1469   1651   1703   1781   1807   1937   1963   2041   2119   2171   2249   2327   2353   2483   2509   2561   2587   2743   2899   2951   2977\n" +
            "     17     34     51     85    119    187    221    289    323    391    493    527    629    697    731    799    901   1003   1037   1139   1207   1241   1343   1411   1513   1649   1717   1751   1819   1853   1921   2159   2227   2329   2363   2533   2567   2669   2771   2839   2941   3043   3077   3247   3281   3349   3383   3587   3791   3859   3893\n" +
            "     19     38     57     95    133    209    247    323    361    437    551    589    703    779    817    893   1007   1121   1159   1273   1349   1387   1501   1577   1691   1843   1919   1957   2033   2071   2147   2413   2489   2603   2641   2831   2869   2983   3097   3173   3287   3401   3439   3629   3667   3743   3781   4009   4237   4313   4351\n" +
            "     23     46     69    115    161    253    299    391    437    529    667    713    851    943    989   1081   1219   1357   1403   1541   1633   1679   1817   1909   2047   2231   2323   2369   2461   2507   2599   2921   3013   3151   3197   3427   3473   3611   3749   3841   3979   4117   4163   4393   4439   4531   4577   4853   5129   5221   5267\n" +
            "     29     58     87    145    203    319    377    493    551    667    841    899   1073   1189   1247   1363   1537   1711   1769   1943   2059   2117   2291   2407   2581   2813   2929   2987   3103   3161   3277   3683   3799   3973   4031   4321   4379   4553   4727   4843   5017   5191   5249   5539   5597   5713   5771   6119   6467   6583   6641\n" +
            "     31     62     93    155    217    341    403    527    589    713    899    961   1147   1271   1333   1457   1643   1829   1891   2077   2201   2263   2449   2573   2759   3007   3131   3193   3317   3379   3503   3937   4061   4247   4309   4619   4681   4867   5053   5177   5363   5549   5611   5921   5983   6107   6169   6541   6913   7037   7099\n" +
            "     37     74    111    185    259    407    481    629    703    851   1073   1147   1369   1517   1591   1739   1961   2183   2257   2479   2627   2701   2923   3071   3293   3589   3737   3811   3959   4033   4181   4699   4847   5069   5143   5513   5587   5809   6031   6179   6401   6623   6697   7067   7141   7289   7363   7807   8251   8399   8473\n" +
            "     41     82    123    205    287    451    533    697    779    943   1189   1271   1517   1681   1763   1927   2173   2419   2501   2747   2911   2993   3239   3403   3649   3977   4141   4223   4387   4469   4633   5207   5371   5617   5699   6109   6191   6437   6683   6847   7093   7339   7421   7831   7913   8077   8159   8651   9143   9307   9389\n" +
            "     43     86    129    215    301    473    559    731    817    989   1247   1333   1591   1763   1849   2021   2279   2537   2623   2881   3053   3139   3397   3569   3827   4171   4343   4429   4601   4687   4859   5461   5633   5891   5977   6407   6493   6751   7009   7181   7439   7697   7783   8213   8299   8471   8557   9073   9589   9761   9847\n" +
            "     47     94    141    235    329    517    611    799    893   1081   1363   1457   1739   1927   2021   2209   2491   2773   2867   3149   3337   3431   3713   3901   4183   4559   4747   4841   5029   5123   5311   5969   6157   6439   6533   7003   7097   7379   7661   7849   8131   8413   8507   8977   9071   9259   9353   9917  10481  10669  10763\n" +
            "     53    106    159    265    371    583    689    901   1007   1219   1537   1643   1961   2173   2279   2491   2809   3127   3233   3551   3763   3869   4187   4399   4717   5141   5353   5459   5671   5777   5989   6731   6943   7261   7367   7897   8003   8321   8639   8851   9169   9487   9593  10123  10229  10441  10547  11183  11819  12031  12137\n" +
            "     59    118    177    295    413    649    767   1003   1121   1357   1711   1829   2183   2419   2537   2773   3127   3481   3599   3953   4189   4307   4661   4897   5251   5723   5959   6077   6313   6431   6667   7493   7729   8083   8201   8791   8909   9263   9617   9853  10207  10561  10679  11269  11387  11623  11741  12449  13157  13393  13511\n" +
            "     61    122    183    305    427    671    793   1037   1159   1403   1769   1891   2257   2501   2623   2867   3233   3599   3721   4087   4331   4453   4819   5063   5429   5917   6161   6283   6527   6649   6893   7747   7991   8357   8479   9089   9211   9577   9943  10187  10553  10919  11041  11651  11773  12017  12139  12871  13603  13847  13969\n" +
            "     67    134    201    335    469    737    871   1139   1273   1541   1943   2077   2479   2747   2881   3149   3551   3953   4087   4489   4757   4891   5293   5561   5963   6499   6767   6901   7169   7303   7571   8509   8777   9179   9313   9983  10117  10519  10921  11189  11591  11993  12127  12797  12931  13199  13333  14137  14941  15209  15343\n" +
            "     71    142    213    355    497    781    923   1207   1349   1633   2059   2201   2627   2911   3053   3337   3763   4189   4331   4757   5041   5183   5609   5893   6319   6887   7171   7313   7597   7739   8023   9017   9301   9727   9869  10579  10721  11147  11573  11857  12283  12709  12851  13561  13703  13987  14129  14981  15833  16117  16259\n" +
            "     73    146    219    365    511    803    949   1241   1387   1679   2117   2263   2701   2993   3139   3431   3869   4307   4453   4891   5183   5329   5767   6059   6497   7081   7373   7519   7811   7957   8249   9271   9563  10001  10147  10877  11023  11461  11899  12191  12629  13067  13213  13943  14089  14381  14527  15403  16279  16571  16717\n" +
            "     79    158    237    395    553    869   1027   1343   1501   1817   2291   2449   2923   3239   3397   3713   4187   4661   4819   5293   5609   5767   6241   6557   7031   7663   7979   8137   8453   8611   8927  10033  10349  10823  10981  11771  11929  12403  12877  13193  13667  14141  14299  15089  15247  15563  15721  16669  17617  17933  18091\n" +
            "     83    166    249    415    581    913   1079   1411   1577   1909   2407   2573   3071   3403   3569   3901   4399   4897   5063   5561   5893   6059   6557   6889   7387   8051   8383   8549   8881   9047   9379  10541  10873  11371  11537  12367  12533  13031  13529  13861  14359  14857  15023  15853  16019  16351  16517  17513  18509  18841  19007\n" +
            "     89    178    267    445    623    979   1157   1513   1691   2047   2581   2759   3293   3649   3827   4183   4717   5251   5429   5963   6319   6497   7031   7387   7921   8633   8989   9167   9523   9701  10057  11303  11659  12193  12371  13261  13439  13973  14507  14863  15397  15931  16109  16999  17177  17533  17711  18779  19847  20203  20381\n" +
            "     97    194    291    485    679   1067   1261   1649   1843   2231   2813   3007   3589   3977   4171   4559   5141   5723   5917   6499   6887   7081   7663   8051   8633   9409   9797   9991  10379  10573  10961  12319  12707  13289  13483  14453  14647  15229  15811  16199  16781  17363  17557  18527  18721  19109  19303  20467  21631  22019  22213\n" +
            "    101    202    303    505    707   1111   1313   1717   1919   2323   2929   3131   3737   4141   4343   4747   5353   5959   6161   6767   7171   7373   7979   8383   8989   9797  10201  10403  10807  11009  11413  12827  13231  13837  14039  15049  15251  15857  16463  16867  17473  18079  18281  19291  19493  19897  20099  21311  22523  22927  23129\n" +
            "    103    206    309    515    721   1133   1339   1751   1957   2369   2987   3193   3811   4223   4429   4841   5459   6077   6283   6901   7313   7519   8137   8549   9167   9991  10403  10609  11021  11227  11639  13081  13493  14111  14317  15347  15553  16171  16789  17201  17819  18437  18643  19673  19879  20291  20497  21733  22969  23381  23587\n" +
            "    107    214    321    535    749   1177   1391   1819   2033   2461   3103   3317   3959   4387   4601   5029   5671   6313   6527   7169   7597   7811   8453   8881   9523  10379  10807  11021  11449  11663  12091  13589  14017  14659  14873  15943  16157  16799  17441  17869  18511  19153  19367  20437  20651  21079  21293  22577  23861  24289  24503\n" +
            "    109    218    327    545    763   1199   1417   1853   2071   2507   3161   3379   4033   4469   4687   5123   5777   6431   6649   7303   7739   7957   8611   9047   9701  10573  11009  11227  11663  11881  12317  13843  14279  14933  15151  16241  16459  17113  17767  18203  18857  19511  19729  20819  21037  21473  21691  22999  24307  24743  24961\n" +
            "    113    226    339    565    791   1243   1469   1921   2147   2599   3277   3503   4181   4633   4859   5311   5989   6667   6893   7571   8023   8249   8927   9379  10057  10961  11413  11639  12091  12317  12769  14351  14803  15481  15707  16837  17063  17741  18419  18871  19549  20227  20453  21583  21809  22261  22487  23843  25199  25651  25877\n" +
            "    127    254    381    635    889   1397   1651   2159   2413   2921   3683   3937   4699   5207   5461   5969   6731   7493   7747   8509   9017   9271  10033  10541  11303  12319  12827  13081  13589  13843  14351  16129  16637  17399  17653  18923  19177  19939  20701  21209  21971  22733  22987  24257  24511  25019  25273  26797  28321  28829  29083\n" +
            "    131    262    393    655    917   1441   1703   2227   2489   3013   3799   4061   4847   5371   5633   6157   6943   7729   7991   8777   9301   9563  10349  10873  11659  12707  13231  13493  14017  14279  14803  16637  17161  17947  18209  19519  19781  20567  21353  21877  22663  23449  23711  25021  25283  25807  26069  27641  29213  29737  29999\n" +
            "    137    274    411    685    959   1507   1781   2329   2603   3151   3973   4247   5069   5617   5891   6439   7261   8083   8357   9179   9727  10001  10823  11371  12193  13289  13837  14111  14659  14933  15481  17399  17947  18769  19043  20413  20687  21509  22331  22879  23701  24523  24797  26167  26441  26989  27263  28907  30551  31099  31373\n" +
            "    139    278    417    695    973   1529   1807   2363   2641   3197   4031   4309   5143   5699   5977   6533   7367   8201   8479   9313   9869  10147  10981  11537  12371  13483  14039  14317  14873  15151  15707  17653  18209  19043  19321  20711  20989  21823  22657  23213  24047  24881  25159  26549  26827  27383  27661  29329  30997  31553  31831\n" +
            "    149    298    447    745   1043   1639   1937   2533   2831   3427   4321   4619   5513   6109   6407   7003   7897   8791   9089   9983  10579  10877  11771  12367  13261  14453  15049  15347  15943  16241  16837  18923  19519  20413  20711  22201  22499  23393  24287  24883  25777  26671  26969  28459  28757  29353  29651  31439  33227  33823  34121\n" +
            "    151    302    453    755   1057   1661   1963   2567   2869   3473   4379   4681   5587   6191   6493   7097   8003   8909   9211  10117  10721  11023  11929  12533  13439  14647  15251  15553  16157  16459  17063  19177  19781  20687  20989  22499  22801  23707  24613  25217  26123  27029  27331  28841  29143  29747  30049  31861  33673  34277  34579\n" +
            "    157    314    471    785   1099   1727   2041   2669   2983   3611   4553   4867   5809   6437   6751   7379   8321   9263   9577  10519  11147  11461  12403  13031  13973  15229  15857  16171  16799  17113  17741  19939  20567  21509  21823  23393  23707  24649  25591  26219  27161  28103  28417  29987  30301  30929  31243  33127  35011  35639  35953\n" +
            "    163    326    489    815   1141   1793   2119   2771   3097   3749   4727   5053   6031   6683   7009   7661   8639   9617   9943  10921  11573  11899  12877  13529  14507  15811  16463  16789  17441  17767  18419  20701  21353  22331  22657  24287  24613  25591  26569  27221  28199  29177  29503  31133  31459  32111  32437  34393  36349  37001  37327\n" +
            "    167    334    501    835   1169   1837   2171   2839   3173   3841   4843   5177   6179   6847   7181   7849   8851   9853  10187  11189  11857  12191  13193  13861  14863  16199  16867  17201  17869  18203  18871  21209  21877  22879  23213  24883  25217  26219  27221  27889  28891  29893  30227  31897  32231  32899  33233  35237  37241  37909  38243\n" +
            "    173    346    519    865   1211   1903   2249   2941   3287   3979   5017   5363   6401   7093   7439   8131   9169  10207  10553  11591  12283  12629  13667  14359  15397  16781  17473  17819  18511  18857  19549  21971  22663  23701  24047  25777  26123  27161  28199  28891  29929  30967  31313  33043  33389  34081  34427  36503  38579  39271  39617\n" +
            "    179    358    537    895   1253   1969   2327   3043   3401   4117   5191   5549   6623   7339   7697   8413   9487  10561  10919  11993  12709  13067  14141  14857  15931  17363  18079  18437  19153  19511  20227  22733  23449  24523  24881  26671  27029  28103  29177  29893  30967  32041  32399  34189  34547  35263  35621  37769  39917  40633  40991\n" +
            "    181    362    543    905   1267   1991   2353   3077   3439   4163   5249   5611   6697   7421   7783   8507   9593  10679  11041  12127  12851  13213  14299  15023  16109  17557  18281  18643  19367  19729  20453  22987  23711  24797  25159  26969  27331  28417  29503  30227  31313  32399  32761  34571  34933  35657  36019  38191  40363  41087  41449\n" +
            "    191    382    573    955   1337   2101   2483   3247   3629   4393   5539   5921   7067   7831   8213   8977  10123  11269  11651  12797  13561  13943  15089  15853  16999  18527  19291  19673  20437  20819  21583  24257  25021  26167  26549  28459  28841  29987  31133  31897  33043  34189  34571  36481  36863  37627  38009  40301  42593  43357  43739\n" +
            "    193    386    579    965   1351   2123   2509   3281   3667   4439   5597   5983   7141   7913   8299   9071  10229  11387  11773  12931  13703  14089  15247  16019  17177  18721  19493  19879  20651  21037  21809  24511  25283  26441  26827  28757  29143  30301  31459  32231  33389  34547  34933  36863  37249  38021  38407  40723  43039  43811  44197\n" +
            "    197    394    591    985   1379   2167   2561   3349   3743   4531   5713   6107   7289   8077   8471   9259  10441  11623  12017  13199  13987  14381  15563  16351  17533  19109  19897  20291  21079  21473  22261  25019  25807  26989  27383  29353  29747  30929  32111  32899  34081  35263  35657  37627  38021  38809  39203  41567  43931  44719  45113\n" +
            "    199    398    597    995   1393   2189   2587   3383   3781   4577   5771   6169   7363   8159   8557   9353  10547  11741  12139  13333  14129  14527  15721  16517  17711  19303  20099  20497  21293  21691  22487  25273  26069  27263  27661  29651  30049  31243  32437  33233  34427  35621  36019  38009  38407  39203  39601  41989  44377  45173  45571\n" +
            "    211    422    633   1055   1477   2321   2743   3587   4009   4853   6119   6541   7807   8651   9073   9917  11183  12449  12871  14137  14981  15403  16669  17513  18779  20467  21311  21733  22577  22999  23843  26797  27641  28907  29329  31439  31861  33127  34393  35237  36503  37769  38191  40301  40723  41567  41989  44521  47053  47897  48319\n" +
            "    223    446    669   1115   1561   2453   2899   3791   4237   5129   6467   6913   8251   9143   9589  10481  11819  13157  13603  14941  15833  16279  17617  18509  19847  21631  22523  22969  23861  24307  25199  28321  29213  30551  30997  33227  33673  35011  36349  37241  38579  39917  40363  42593  43039  43931  44377  47053  49729  50621  51067\n" +
            "    227    454    681   1135   1589   2497   2951   3859   4313   5221   6583   7037   8399   9307   9761  10669  12031  13393  13847  15209  16117  16571  17933  18841  20203  22019  22927  23381  24289  24743  25651  28829  29737  31099  31553  33823  34277  35639  37001  37909  39271  40633  41087  43357  43811  44719  45173  47897  50621  51529  51983\n" +
            "    229    458    687   1145   1603   2519   2977   3893   4351   5267   6641   7099   8473   9389   9847  10763  12137  13511  13969  15343  16259  16717  18091  19007  20381  22213  23129  23587  24503  24961  25877  29083  29999  31373  31831  34121  34579  35953  37327  38243  39617  40991  41449  43739  44197  45113  45571  48319  51067  51983  52441\n" ;
        StringWriter output = new StringWriter();
        long[] primeValues = getPrimes(50L);
        printTable(primeValues, new PrintWriter(output));
        assertTrue(output.toString().contains(expected_output));
    }

    @Test
    public void positive_do_product_with_larager_and_max_long_values() {
        long[] primeValues = new long[] {
            222_111L,
            333_222_111L,
            444_333_222_111L,
            555_444_333_222_111L,
            666_555_444_333_222_111L,
            7_666_555_444_333_222_111L,
            9_223_372_036_854_775_807L
        };
        String expected_output =
            "                                                                          222111                               333222111                            444333222111                         555444333222111                      666555444333222111                     7666555444333222111                     9223372036854775807\n" +
            "                                  222111                             49333296321                          74012296296321                       98691296296296321                   123370296296296296321                148049296296296296296321               1702826296296296296296321               2048612386477851109268577\n" +
            "                               333222111                          74012296296321                      111036975259296321                   148061654259259296321                185086333259259259296321             222111012259259259259296321            2554665789259259259259296321            3073431500659118194840268577\n" +
            "                            444333222111                       98691296296296321                   148061654259259296321                197432012271543259296321             246802370283876543259296321          296172728296209876543259296321         3406505283073209876543259296321         4098250615864179576502840268577\n" +
            "                         555444333222111                   123370296296296296321                185086333259259259296321             246802370283876543259296321          308518407308555481543259296321       370234444333234481481543259296321      4258344776888011481481543259296321      5123069731070264752461502840268577\n" +
            "                      666555444333222111                148049296296296296296321             222111012259259259259296321          296172728296209876543259296321       370234444333234481481543259296321    444296160370259160407481543259296321   5110184270702813937407481543259296321   6147888846276350952214461502840268577\n" +
            "                     7666555444333222111               1702826296296296296296321            2554665789259259259259296321         3406505283073209876543259296321      4258344776888011481481543259296321   5110184270702813937407481543259296321  58776072381035368714407481543259296321  70711493104259781601214461502840268577\n" +
            "                     9223372036854775807               2048612386477851109268577            3073431500659118194840268577         4098250615864179576502840268577      5123069731070264752461502840268577   6147888846276350952214461502840268577  70711493104259781601214461502840268577  85070591730234615847396907784232501249\n" ;
        StringWriter output = new StringWriter();
        printTable(primeValues, new PrintWriter(output));
        assertTrue(output.toString().contains(expected_output));
    }

    //
    // Negative Tests
    //

    // 1. For printTable() 1st parameter, send an array that is not a long
    //    array. This is actually a compilation error.

    // 2. For printTable() 2nd parameter, send an incorrect PrintWriter. This
    //    is actually a compilation error.
}
